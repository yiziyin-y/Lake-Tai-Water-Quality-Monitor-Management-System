<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.glyk.heos.dal.dao.SupplierCommendMapper">
  <resultMap id="BaseResultMap" type="com.glyk.heos.dal.dao.SupplierCommend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="SUPPLIER_ID" jdbcType="BIGINT" property="supplierId" />
    <result column="USER_ID" jdbcType="BIGINT" property="userId" />
    <result column="SUPPLIER_NAME" jdbcType="VARCHAR" property="supplierName" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="REAL_NAME" jdbcType="VARCHAR" property="realName" />
    <result column="SEX" jdbcType="INTEGER" property="sex" />
    <result column="USER_TYPE" jdbcType="INTEGER" property="userType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    SUPPLIER_ID, USER_ID, SUPPLIER_NAME, USERNAME, PHONE, REAL_NAME, SEX, USER_TYPE
  </sql>
  <select id="selectByExample" parameterType="com.glyk.heos.dal.dao.SupplierCommendExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from supplier_commend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.glyk.heos.dal.dao.SupplierCommendExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from supplier_commend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glyk.heos.dal.dao.SupplierCommend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into supplier_commend (SUPPLIER_ID, USER_ID, SUPPLIER_NAME, 
      USERNAME, PHONE, REAL_NAME, 
      SEX, USER_TYPE)
    values (#{supplierId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{supplierName,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{userType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.glyk.heos.dal.dao.SupplierCommend">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into supplier_commend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        SUPPLIER_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="supplierName != null">
        SUPPLIER_NAME,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="realName != null">
        REAL_NAME,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="userType != null">
        USER_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glyk.heos.dal.dao.SupplierCommendExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from supplier_commend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update supplier_commend
    <set>
      <if test="record.supplierId != null">
        SUPPLIER_ID = #{record.supplierId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.supplierName != null">
        SUPPLIER_NAME = #{record.supplierName,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        REAL_NAME = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        SEX = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null">
        USER_TYPE = #{record.userType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update supplier_commend
    set SUPPLIER_ID = #{record.supplierId,jdbcType=BIGINT},
      USER_ID = #{record.userId,jdbcType=BIGINT},
      SUPPLIER_NAME = #{record.supplierName,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      REAL_NAME = #{record.realName,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=INTEGER},
      USER_TYPE = #{record.userType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>