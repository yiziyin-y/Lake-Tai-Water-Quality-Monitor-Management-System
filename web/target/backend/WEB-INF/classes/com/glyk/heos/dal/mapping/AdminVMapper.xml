<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.glyk.heos.dal.dao.AdminVMapper">
  <resultMap id="BaseResultMap" type="com.glyk.heos.dal.dao.AdminV">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="DEPT_ID" jdbcType="BIGINT" property="deptId" />
    <result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName" />
    <result column="ADMIN" jdbcType="VARCHAR" property="admin" />
    <result column="ADMIN_NAME" jdbcType="VARCHAR" property="adminName" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="ACCOUNT_TYPE" jdbcType="VARCHAR" property="accountType" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="CONTACT_TEL" jdbcType="VARCHAR" property="contactTel" />
    <result column="ADMIN_TEL" jdbcType="VARCHAR" property="adminTel" />
  </resultMap>
  <insert id="insert" parameterType="com.glyk.heos.dal.dao.AdminV">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ADMIN_V (DEPT_ID, DEPT_NAME, ADMIN, 
      ADMIN_NAME, PASSWORD, ACCOUNT_TYPE, 
      ADDRESS, CONTACT_TEL, ADMIN_TEL
      )
    values (#{deptId,jdbcType=BIGINT}, #{deptName,jdbcType=VARCHAR}, #{admin,jdbcType=VARCHAR}, 
      #{adminName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{accountType,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{contactTel,jdbcType=VARCHAR}, #{adminTel,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glyk.heos.dal.dao.AdminV">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ADMIN_V
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="deptName != null">
        DEPT_NAME,
      </if>
      <if test="admin != null">
        ADMIN,
      </if>
      <if test="adminName != null">
        ADMIN_NAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="accountType != null">
        ACCOUNT_TYPE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="contactTel != null">
        CONTACT_TEL,
      </if>
      <if test="adminTel != null">
        ADMIN_TEL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="admin != null">
        #{admin,jdbcType=VARCHAR},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="contactTel != null">
        #{contactTel,jdbcType=VARCHAR},
      </if>
      <if test="adminTel != null">
        #{adminTel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="getAdmin" parameterType="String" resultMap="BaseResultMap">
    select
    *
    from ADMIN_V
    where admin=#{admin}
  </select>

  <select id="selectAdminByPhone" parameterType="String" resultMap="BaseResultMap">
    select
    *
    from ADMIN_V
    where ADMIN_TEL = #{phone}
  </select>


  <sql id="where">
    <where>

      <if test="accountType != null">
        AND    account_Type= #{accountType,jdbcType=VARCHAR}
      </if>
      <if test="deptId != null">
        AND   dept_Id   = #{deptId,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

  <select id="selecAllAdmin" parameterType="com.glyk.heos.dal.dao.AdminV" resultMap="BaseResultMap">
    select
    *
    from ADMIN_V    <include refid="where" />

</select>

</mapper>